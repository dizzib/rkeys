// mixin to generate a single key
//
// args: (mandatory) one of the following:
//    - action
//    - action label
//
// action: (mandatory) one of the following:
//    - a keysym with or without the XK_ prefix eg 'XK_a' or 'a'
//    - id
//      a command-id as defined in command yaml
//    - id:params
//      command-id with a list of comma-delimited parameters
//
//    Full list of keysyms at https://github.com/sidorares/node-x11/blob/master/lib/keysyms.js
//    If label isn't supplied then treat action as the label
//
// label: (optional) one of the following:
//    - text string e.g. 'my label'
//    - font-awesome classes 'fa-coffee' or 'fa-bed fa-flip-horizontal'
//
mixin key(args, label)
  - var arr = args.toString().split(' ')
  - var act = arr[0]
  - label = label || arr[1]
  .key.up(id=act, class=attributes.class)
    if label && label.substring(0,3) == 'fa-'
      // label is a font-awesome identifier
      .label
        i.fa.fa-2x(class=label)
    else
      // label is text
      - var lbl = label || act
      - var lblcls = 'len-' + lbl.toString().length
      .label(class=lblcls)= lbl

// mixin to generate multiple keys
//
// accepts either
//    - a space-delimited string of actions e.g. 'q w e r t y'
// or
//    - a list of args for +key
//
//  Any classes or attributes are applied to each key in turn. Examples:
//
//  +keys('a b').z        expands to +key('a').z +key('b').z
//  +keys('a b c').z      expands to +key('a').z +key('b').z +key('c').z
//  +keys('a', 'b').z     expands to +key('a').z +key('b').z
//  +keys('a b', 'c d').z expands to +key('a b').z +key('c d').z
//
mixin keys(...args)
  each arg in args
    - acts = arg.toString().split(' ')
    if acts.length <= 2 && args.length > 1
      +key(arg)&attributes(attributes)
    else
      each act in acts
        +key(act)&attributes(attributes)
