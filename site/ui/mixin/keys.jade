// mixin to generate a single key
//
// args: (mandatory) one of the following:
//    - specifier
//    - 'specifier label' (space-delimited string)
//
// specifier: (mandatory) one of the following:
//    - a keysym-id eg 'XK_a'
//    - a keysym suffix eg 'a'
//    - id
//      a command-id as defined in command yaml
//    - id:params
//      command-id with a list of comma-delimited parameters
//
//    Full list of keysyms at https://github.com/sidorares/node-x11/blob/master/lib/keysyms.js
//    If label isn't supplied then treat specifier as the label
//
// label: (optional) one of the following:
//    - text string e.g. 'my label'
//    - font-awesome classes 'fa-coffee' or 'fa-bed fa-flip-horizontal'
//
mixin key(args, label)
  - var arr = args.toString().split(' ')
  - var spec = arr[0]
  - label = label || arr[1]
  .key.up(id=spec, class=attributes.class)
    if label && label.substring(0,3) == 'fa-'
      // label is a font-awesome identifier
      .label
        i.fa.fa-2x(class=label)
    else
      // label is text
      - var lbl = label || spec
      - var lblcls = 'len-' + lbl.toString().length
      .label(class=lblcls)= lbl

// mixin to generate a sequence of keys
//
// accepts a list of args, where each arg is one of the following:
//    - a single specifier e.g. 'a'
//    - 'specifier label' e.g. 'C+z undo'
//    - a space-delimited string of 3 or more specifiers e.g. 'q w e r t y'
//
//  Any attributes are applied to each key in turn. Examples:
//
//  +keys('x').foo      expands to  +key('x').foo
//  +keys('x y').foo    expands to  +key('x y').foo
//  +keys('x y z').foo  expands to  +key('x').foo  +key('y').foo  +key('z').foo
//
mixin keys(...args)
  each arg in args
    - specs = arg.toString().split(' ')
    if specs.length <= 2
      +key(arg)&attributes(attributes)
    else
      each spec in specs
        +key(spec)&attributes(attributes)
